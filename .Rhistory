c(1,10000,100000000)*knotdensities
knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
knotdensities <- dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s)
knotbetas
c(1,10000,100000000)*knotdensities
knotdensities
mat <- matrix(c(1,2,3,4,5,6,7,8,9))
mat <- matrix(c(1,2,3,4,5,6,7,8,9), nrow=3)
mat
mat <- matrix(c(1,2,3,4,5,6,7,8,9), nrow=4)
mat
mat <- matrix(c(1,2,3,4,5,6,7,8,9), nrow=3)
mat
c(1,10,100)*mat
t(c(1,10,100))*mat
c(1,10,100)*t(mat)
t(c(1,10,100)*t(mat))
mat
knoteffects <- t(knotbetas*t(knotdensities))
knoteffects
knoteffects %>% exp()
mean(dat_train$dose1)
m5
mat
as.matrix(mat, nrow=3)
as.matrix(mat, nrow=2)
dim(mat) <- c(3,,3,3)
dim(mat) <- c(3,3,3)
mat <- array(mat)
mat
knoteffects <- t(knotbetas*t(exp((knotdensities)))
knoteffects <-
mat <- array(mat, dim=)
t(knotbetas*t(exp((knotdensities)))
)
knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
knotdensities
knotbetas
knotdensities
mat
mat <- matrix(mat, nrow=3)
mat
as.array(mat)
mat
mat <- as.array(mat)
mat
dim(mat) <- c(2,2)
dim(mat) <- c(3,1,3)
mat
knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
knoteffect
knoteffects
c(nsims, 1, length(knotinds))
c(nsim, 1, length(knotinds))
dim(knoteffects) <- c(nsim, 1, length(knotinds))
knoteffects
apply(knoteffects, 2,
function(x){
apply(x, 1, sum)
})
apply(knoteffects, 3,
function(x){
apply(x, 1, sum)
})
knoteffects
apply(x, 1, '*', c(2,2))
apply(knoteffects, 3,
function(x){
apply(x, 1, '*', c(2,2))
})
?\apply()
?apply()
apply(knoteffects, c(3,1), '*', c(2,2))
apply(knoteffects, 1, '*', c(2,2))
knoteffects
knoteffects[1,,]
apply(knoteffects[1,,], 1, '*', c(2,2))
apply(knoteffects, 1, '*', c(2,2))
knoteffects
knot_densities <- t(apply((as.matrix(dose1)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1 <- log(seq(0,10, 0.1)+1/2)
knot_densities <- t(apply((as.matrix(dose1)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
head(knot_densities)
dose1knots <- apply(knot_densities, 2, '*', x)
dose1knots <- apply(knot_densities, 2, '*', dose1)
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
dose1
dose1knots
head(dose1)
head(dat_train)
head(dose1knots)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
head(dose1knots)
head(dose1)
head(dat_train)
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = "A",
dose2 = 0,
body = mean(dat$body),
blot = NA
),
dose1knots
)
)
}
dim(newdat)
newdat[90:120,]
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = "A",
dose1 = dose1,
dose2 = 0,
body = mean(dat$body),
blot = NA
),
dose1knots
)
)
}
head(dose1)
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = "A",
dose1 = dose1,
dose2 = 0,
body = mean(dat$body),
blot = NA
),
dose1knots
)
)
}
dim(newdat)
ggplot(newdat, aes(x=dose1, y=predict(mod, newdat), color=lab)) + geom_line()
ggplot(newdat, aes(x=dose1, y=predict(mod, newdat), color=lab)) + geom_line()
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat), color=lab))) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab")
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab")
simknotcurves <- function(modlist){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = "A",
dose1 = dose1,
dose2 = 0,
body = mean(dat$body),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab")
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5)
kable(t(round(lmer_list(m5)[[2]], 4)))
(5/3)*4
20/3
simknotcurves <- function(modlist){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = "A",
dose1 = dose1,
dose2 = 0,
body = mean(dat$body[dat$proto == proto]),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab") + theme(axis.text.x = element_text(hjust=1),
plot.title = element_text(hjust = 0.5))
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5)
simknotcurves <- function(modlist, protocol="A"){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = protocol,
dose1 = dose1,
dose2 = 0,
body = mean(dat$body[dat$proto == protocol]),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab") + theme(axis.text.x = element_text(hjust=1),
plot.title = element_text(hjust = 0.5))
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5, "B")
simknotcurves <- function(modlist, protocol="A"){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = protocol,
dose1 = dose1,
dose2 = 0,
body = mean(dat$body[dat$proto == protocol]),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Dose 1 Curve by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab") + theme(axis.text.x = element_text(hjust=1),
plot.title = element_text(hjust = 0.5))
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5, "B")
simknotcurves(kernlist5, "C")
simknotcurves(kernlist5, "D")
getwd()
setwd("../case2")
getwd()
read.table("kellydat.txt")
kellydat <- read.table("kellydat.txt")
head(keyllydat)
head(kellydat)
kellydat <- read.table("kellydat.txt", row.names = TRUE, stringsAsFactors = FALSE)
kellydat <- read.table("kellydat.txt", header = TRUE, stringsAsFactors = FALSE)
head(kellydat)
boxplot(nctdel ~ fail)
boxplot(nctdel ~ fail, data = kellydat)
dim(kellydat)
boxplot(log(nctdel) ~ fail, data = kellydat)
summary(kellydat)
sum(is.na(kellydat))
sum(as.na(kellydat))
apply(kellydat, 2, function(x){mean(is.na(x))})
hist(nctdel, dat=kellydat)
hist(kellydat$nctdel, dat=kellydat)
hist(kellydat$nctdel)
hist(kellydat$nctdel)
hist(log(kellydat$nctdel))
apply(kellydat[,6:9], 2, function(x){mean(is.na(x))})
apply(kellydat[,6:9], 2, sum
)
apply(kellydat[,6:9], 2, sum) %>% sum()
library(dplyr)
apply(kellydat[,6:9], 2, sum) %>% sum()
apply(kellydat[,6:9], 2, rowSums)
apply(kellydat[,6:9], 1, rowSums)
apply(kellydat[,6:9], 1, sum)
boxplot(log(nctdel) ~ male, data = kellydat)
boxplot(log(nctdel) ~ male, data = kellydat)
summary(nctdel, dat=kellydat)
summary(kellydat$nctdel)
head(sort(kellydat$nctdel)
)
head(sort(kellydat$nctdel),30)
boxplot(log(nctdel+1E6) ~ fail, data = kellydat)
boxplot(log(nctdel+1) ~ fail, data = kellydat)
boxplot(log(nctdel+1) ~ male, data = kellydat)
boxplot(log(nctdel+1) ~ black, data = kellydat)
anova(log(nctdel+1) ~ black, data = kellydat)
aov(log(nctdel+1) ~ black, data = kellydat)
aov(log(nctdel+1) ~ black, data = kellydat) %>% summary()
?survival
??survival
library(survival)
?survival
