)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab")
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5)
kable(t(round(lmer_list(m5)[[2]], 4)))
(5/3)*4
20/3
simknotcurves <- function(modlist){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = "A",
dose1 = dose1,
dose2 = 0,
body = mean(dat$body[dat$proto == proto]),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab") + theme(axis.text.x = element_text(hjust=1),
plot.title = element_text(hjust = 0.5))
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5)
simknotcurves <- function(modlist, protocol="A"){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = protocol,
dose1 = dose1,
dose2 = 0,
body = mean(dat$body[dat$proto == protocol]),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Weight by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab") + theme(axis.text.x = element_text(hjust=1),
plot.title = element_text(hjust = 0.5))
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5, "B")
simknotcurves <- function(modlist, protocol="A"){
mod <- modlist[["mod"]]
# L <- lmer_list(mod)
# MEANS <- c(L[["randommeans"]]["(Intercept)", lab], L[["randommeans"]][grep("knot", rownames(L[["randommeans"]])), lab])
# COR_full <- attr(VarCorr(mod)[[1]], "correlation")
#
# knotinds <- grep("knot", rownames(COR_full))
# interind <- grep("Inter", rownames(COR_full))
#
# COR <- COR_full[c(interind,knotinds), c(interind,knotinds)]
#
# stddev <- attr(VarCorr(mod)[[1]], "stddev")[c(interind, knotinds)]
# STDDEV <- apply(t(stddev), 2, '*', stddev)
# #cov(x,y) = cor(x,y)*sd(x)sd(y)
# COV <- COR * STDDEV
#
# sims <- rmvnorm(nsim, mean = MEANS, sigma = COV)
# labsims <- sims[,1]
# knotsims <- sims[,-1]
# knotsims <- rbind(MEANS[-1], knotsims)
# labsims <- c(MEANS[1], labsims)
# nsim <- nsim + 1
#
# #constant data
# protoeffect <- 0 #just assume baseline protocol
# dose2 <- 0
# dose2trans <- eval(parse(text = grep("dose2", rownames(L$randommeans), value=T))) #in case dose2 needs to be transformed
# dose2effect <- dose2trans*L$randommeans[grep("dose2", rownames(L$randommeans)), lab]
# fixedintereffect <- L$fixed["(Intercept)","mean"]
# protoeffect <- 0
# body <- (mean(dat_train$body))
# bodyeffect <- log(body)*(L$fixed[grep("body", rownames(L$fixed)), "mean"])
dose1 <- seq(0,10, 0.1)
dose1trans <- log(dose1+1/2)
knot_densities <- t(apply((as.matrix(dose1trans)), 1, dnorm, mean=modlist$tau, sd=modlist$s))
dose1knots <- apply(knot_densities, 2, '*', dose1trans)
colnames(dose1knots) <- paste0("knot",1:ncol(dose1knots))
#get 101 data points (dose1 0-10) for each lab
newdat <- NULL
for(eachlab in unique(dat$lab)){
newdat <- rbind(
newdat,
cbind(
data.frame(
lab = eachlab,
proto = protocol,
dose1 = dose1,
dose2 = 0,
body = mean(dat$body[dat$proto == protocol]),
blot = NA
),
dose1knots
)
)
}
ggplot(newdat, aes(x=dose1, y=exp(predict(mod, newdat)), color=lab)) +
geom_line() +
labs(title = "Dose 1 Curve by Lab",
x = "Dose 1",
y = "Blotted Uterus Weight",
color = "Lab") + theme(axis.text.x = element_text(hjust=1),
plot.title = element_text(hjust = 0.5))
# knotbetas <- L$randommeans[knotinds, lab] #these are the betas for the dose1 effect kernals
# knotdensities <- exp(dnorm(x = knotsims, mean = modlist$tau, sd = modlist$s))
#
# knoteffects <- as.array(t(knotbetas*t(knotdensities))) #???
# dim(knoteffects) <- c(nsim, 1, length(knotinds))
#
# apply(knoteffects, 1, '*', c(2,2))
#
}
simknotcurves(kernlist5, "B")
simknotcurves(kernlist5, "C")
simknotcurves(kernlist5, "D")
getwd()
setwd("../case2")
getwd()
read.table("kellydat.txt")
kellydat <- read.table("kellydat.txt")
head(keyllydat)
head(kellydat)
kellydat <- read.table("kellydat.txt", row.names = TRUE, stringsAsFactors = FALSE)
kellydat <- read.table("kellydat.txt", header = TRUE, stringsAsFactors = FALSE)
head(kellydat)
boxplot(nctdel ~ fail)
boxplot(nctdel ~ fail, data = kellydat)
dim(kellydat)
boxplot(log(nctdel) ~ fail, data = kellydat)
summary(kellydat)
sum(is.na(kellydat))
sum(as.na(kellydat))
apply(kellydat, 2, function(x){mean(is.na(x))})
hist(nctdel, dat=kellydat)
hist(kellydat$nctdel, dat=kellydat)
hist(kellydat$nctdel)
hist(kellydat$nctdel)
hist(log(kellydat$nctdel))
apply(kellydat[,6:9], 2, function(x){mean(is.na(x))})
apply(kellydat[,6:9], 2, sum
)
apply(kellydat[,6:9], 2, sum) %>% sum()
library(dplyr)
apply(kellydat[,6:9], 2, sum) %>% sum()
apply(kellydat[,6:9], 2, rowSums)
apply(kellydat[,6:9], 1, rowSums)
apply(kellydat[,6:9], 1, sum)
boxplot(log(nctdel) ~ male, data = kellydat)
boxplot(log(nctdel) ~ male, data = kellydat)
summary(nctdel, dat=kellydat)
summary(kellydat$nctdel)
head(sort(kellydat$nctdel)
)
head(sort(kellydat$nctdel),30)
boxplot(log(nctdel+1E6) ~ fail, data = kellydat)
boxplot(log(nctdel+1) ~ fail, data = kellydat)
boxplot(log(nctdel+1) ~ male, data = kellydat)
boxplot(log(nctdel+1) ~ black, data = kellydat)
anova(log(nctdel+1) ~ black, data = kellydat)
aov(log(nctdel+1) ~ black, data = kellydat)
aov(log(nctdel+1) ~ black, data = kellydat) %>% summary()
?survival
??survival
library(survival)
?survival
missing_d <- (which(is.na(dat)))
library(ggplot2)
library(survival)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
dat <- read.table("kellydat.txt", header=T)
missing_d <- (which(is.na(dat)))
dat[missing_d,] # no NA's
dat$race = "Others"
dat$race[dat$black==1]="Black"
dat$race[dat$hisp==1]="Hispanic"
dat$gender = "male"
dat$gender[dat$male==0]="female"
dat$symptom = 0
dat$symptom[dat$sn1==1]=1
dat$symptom[dat$sn2==1]=2
dat$symptom[dat$sn3==1]=3
dat$symptom[dat$all4==1]=4
ggplot(data = dat, aes(x=race,y=nctdel)) + geom_boxplot(aes(fill=gender))
ggplot(data = dat, aes(x=as.factor(symptom), y=nctdel)) +geom_boxplot()
ggplot(data = dat, aes(x=race, y=symptom)) + geom_boxplot(aes(fill=gender))
hist(dat$nctdel[dat$hisp == 1])
hist(dat$nctdel[dat$hisp == 1], breaks=10)
dim(dat$nctdel[dat$hisp == 1], breaks=10)
dim(dat$nctdel[dat$hisp == 1])
dim(dat$nctdel[dat$hisp == 1,])
head(dat$nctdel[dat$hisp == 1])
length(dat$nctdel[dat$hisp == 1])
length(dat$nctdel[dat$hisp == 1])
length(dat$se[dat$hisp == 1])
length(dat$sex[dat$hisp == 1])
length(dat$gender[dat$hisp == 1])
(dat$gender[dat$hisp == 1])
(dat$gender[dat$hisp == 1]) %>% table()
library(dplyr)
(dat$gender[dat$hisp == 1]) %>% table()
ggplot(data = dat, aes(x=as.factor(symptom), y=nctdel)) +geom_boxplot()
g1 + labs()
g1 <- ggplot(data = dat, aes(x=race,y=nctdel)) + geom_boxplot(aes(fill=gender))
g1 + labs(caption = "hey")
aov(data=dat, nctdel ~ symptoms)
aov(data=dat, nctdel ~ symptom)
aov(data=dat, nctdel ~ symptom) %>% anove()
aov(data=dat, nctdel ~ symptom) %>% anova()
aov(data=dat, nctdel ~ symptom) %>% summary()
summary(anova(aov(data=dat, nctdel ~ symptom)
))
summary(aov(data=dat, nctdel ~ symptom))[[1]]
summary(aov(data=dat, nctdel ~ symptom))[[1]][["Pr(>F)"]]
summary(aov(data=dat, nctdel ~ symptom))[[1]][["Pr(>F)"]][1]
g2 + labs(caption = paste("p-value:", round(p2,4))
)
g2 <- ggplot(data = dat, aes(x=as.factor(symptom), y=nctdel)) +geom_boxplot()
g3 <- ggplot(data = dat, aes(x=race, y=symptom)) + geom_boxplot(aes(fill=gender))
g2 + labs(caption = paste("p-value:", round(p2,4)))
p2 <- summary(aov(data=dat, nctdel ~ symptom))[[1]][["Pr(>F)"]][1]
g2 + labs(caption = paste("p-value:", round(p2,4)))
p2 <- summary(aov(data=dat, log(nctdel) ~ symptom))[[1]][["Pr(>F)"]][1]
p2 <- summary(aov(data=dat, log(nctdel+.001) ~ symptom))[[1]][["Pr(>F)"]][1]
p2
g2 + labs(caption = paste("p-value:", round(p2,4)))
g3
table(dat$race)
table(dat$black, dat$hisp)
table(dat$race, dat$symptom)
plot(dat$race, dat$symptom)
mosaic(dat$race, dat$symptom)
mosaicplot(dat$race, dat$symptom)
mosaicplot(as.factor(dat$race), dat$symptom)
mosaicplot(dat$symptom, as.factor(dat$race))
?mosaicplot
mosaicplot(dat$symptom ~ as.factor(dat$race))
mosaicplot(as.factor(dat$race) ~ dat$symptom)
?geom_mosaic
g3b <- ggplot(data = dat, aes(x=race, y=symptom)) + geom_col(aes(fill=gender))
g3b
ggplot(data = dat, aes(x=race, y=symptom)) + geom_col(aes(fill=gender), position_dodge())
ggplot(data = dat, aes(x=race, y=symptom)) + geom_col(aes(fill=gender), position = "dodge")
ggplot(data = dat, aes(x=race, y=symptom)) + geom_col(aes(fill=symptom), position = "dodge")
ggplot(data = dat, aes(x=race) + geom_col(aes(fill=symptom), position = "dodge")
)
ggplot(data = dat, aes(x=race)) + geom_col(aes(fill=symptom), position = "dodge")
ggplot(data = dat, aes(x=race, y=symptom)) + geom_col(aes(fill=gender), position = "dodge")
ggplot(data = dat, aes(x=race, y=symptom)) + geom_bar(aes(fill=gender))
ggplot(data = dat, aes(x=race)) + geom_bar(aes(fill=gender))
ggplot(data = dat, aes(x=race)) + geom_bar(position = "dodge")
ggplot(data = dat, aes(x=race)) + geom_bar(position = "dodge", fill=gender)
ggplot(data = dat, aes(x=race)) + geom_bar(aes(fill=gender),position = "dodge")
ggplot(data = dat, aes(x=race)) + geom_bar(aes(col=gender),position = "dodge")
col()
ggplot(data = dat, aes(x=race)) + geom_bar(aes(fill=gender),position = "dodge")
ggplot(data = dat, aes(x=race)) + geom_bar(aes(fill=symptom),position = "dodge")
ggplot(data = dat, aes(x=race)) + geom_bar(aes(fill=as.factor(symptom)),position = "dodge")
ggplot(data = dat, aes(x=as.factor(race))) + geom_bar(aes(fill=as.factor(symptom)),position = "dodge")
g3m <- ggplot(data = dat[dat$gender=="male",], aes(x=race, y=symptom)) + geom_bar(aes(fill=gender))
g3f <- ggplot(data = dat[dat$gender=="female",], aes(x=race, y=symptom)) + geom_bar(aes(fill=gender))
gridExtra::grid.arrange(g3m, g3f, nrow=2)
g3m <- ggplot(data = dat[dat$gender=="male",], aes(x=race)) + geom_bar(aes(fill=as.factor(symptom)),position = "dodge")
g3f <- ggplot(data = dat[dat$gender=="female",], aes(x=race)) + geom_bar(aes(fill=as.factor(symptom)),position = "dodge")
gridExtra::grid.arrange(g3m, g3f, nrow=2)
ls()
hist(dat$nctdel)
head(dat$nctdel)
head(dat)
library(dplyr)
head(dat %>% filter(fail == 1) %>% select(nctdel))
hit(dat %>% filter(fail == 1) %>% select(nctdel))
hist(dat %>% filter(fail == 1) %>% select(nctdel))
hist(dat %>% filter(fail == 1) %>% select(nctdel) %>% '[['(1))
hist(dat %>% filter(fail == 0) %>% select(nctdel) %>% '[['(1))
head(dat)
getwd()
getwd()
C:\Users\Nathaniel Brown\Documents\GitHub\case-studies\stroke-treatment\
dat <- read.table("kellydat.txt", header=TRUE)
head(dat)
library(survival)
?Surv
dat.km <- survfit(nctdel ~ all4)
dat.surv <- Surv(time=ntcdel , event=fail)
a
dat.KM <- survfit(Surv(nctdel, fail) ~ race, type="kaplan-meier", conf.type="log", data=dat)
dat <- read.table("kellydat.txt", header=TRUE)
dat$race = "Others"
dat$race[dat$black==1]="Black"
dat$race[dat$hisp==1]="Hispanic"
dat$gender = "male"
dat$gender[dat$male==0]="female"
dat$symptom = 0
dat$symptom[dat$sn1==1]=1
dat$symptom[dat$sn2==1]=2
dat$symptom[dat$sn3==1]=3
dat$symptom[dat$all4==1]=4
dat.KM <- survfit(Surv(nctdel, fail) ~ 1, type="kaplan-meier", conf.type="log", data=dat)
plot(dat.KM)
dat <- read.table("kellydat.txt", header=TRUE)
dat$race = "Others"
dat$race[dat$black==1]="Black"
dat$race[dat$hisp==1]="Hispanic"
dat$gender = "male"
dat$gender[dat$male==0]="female"
dat$symptom = 0
dat$symptom[dat$sn1==1]=1
dat$symptom[dat$sn2==1]=2
dat$symptom[dat$sn3==1]=3
dat$symptom[dat$all4==1]=4
dat.KM <- survfit(Surv(nctdel, fail) ~ male, type="kaplan-meier", conf.type="log", data=dat)
dat <- read.table("kellydat.txt", header=TRUE)
dat$race = "Others"
dat$race[dat$black==1]="Black"
dat$race[dat$hisp==1]="Hispanic"
dat$gender = "male"
dat$gender[dat$male==0]="female"
dat$symptom = 0
dat$symptom[dat$sn1==1]=1
dat$symptom[dat$sn2==1]=2
dat$symptom[dat$sn3==1]=3
dat$symptom[dat$all4==1]=4
dat.KM <- survfit(Surv(nctdel, fail) ~ gender, type="kaplan-meier", conf.type="log", data=dat)
head(dat)
dat <- read.table("kellydat.txt", header=TRUE)
dat$race = "Others"
dat$race[dat$black==1]="Black"
dat$race[dat$hisp==1]="Hispanic"
dat$gender = "male"
dat$gender[dat$male==0]="female"
dat$symptom = 0
dat$symptom[dat$sn1==1]=1
dat$symptom[dat$sn2==1]=2
dat$symptom[dat$sn3==1]=3
dat$symptom[dat$all4==1]=4
dat.KM <- survfit(Surv(nctdel, fail) ~ symptom, type="kaplan-meier", conf.type="log", data=dat)
dat.KM <- survfit(Surv(nctdel, fail) ~ gender, type="kaplan-meier", conf.type="log", data=dat)
plot(dat.KM)
head(dat)
dat.KM.all <- survfit(Surv(nctdel, fail) ~ race + gender + symptom, type="kaplan-meier", conf.type="log", data=dat)
dat.KM.a
dat.KM.all
plot(dat.KM.all)
dat.KM.all <- survfit(Surv(nctdel, fail) ~ gender + symptom, type="kaplan-meier", conf.type="log", data=dat)
plot(dat.KM.all)
head(dat)
View(dat)
table(dat$symptom)
grid.arrange(g3m, g3f, nrow=2)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(ggplot2)
library(survival)
library(gridExtra)
dat <- read.table("kellydat.txt", header=T)
missing_d <- (which(is.na(dat)))
#dat[missing_d,] # no NA's
dat$race = "Others"
dat$race[dat$black==1]="Black"
dat$race[dat$hisp==1]="Hispanic"
dat$gender = "male"
dat$gender[dat$male==0]="female"
dat$symptom = 0
dat$symptom[dat$sn1==1]=1
dat$symptom[dat$sn2==1]=2
dat$symptom[dat$sn3==1]=3
dat$symptom[dat$all4==1]=4
g1 <- ggplot(data = dat, aes(x=race,y=nctdel)) + geom_boxplot(aes(fill=gender))
g2 <- ggplot(data = dat, aes(x=as.factor(symptom), y=nctdel)) +geom_boxplot()
g3 <- ggplot(data = dat, aes(x=race, y=symptom)) + geom_boxplot(aes(fill=gender))
g3m <- ggplot(data = dat[dat$gender=="male",], aes(x=race)) + geom_bar(aes(fill=as.factor(symptom)),position = "dodge")
g3f <- ggplot(data = dat[dat$gender=="female",], aes(x=race)) + geom_bar(aes(fill=as.factor(symptom)),position = "dodge")
g1
p2 <- summary(aov(data=dat, nctdel ~ symptom))[[1]][["Pr(>F)"]][1]
g2 + labs(caption = paste("p-value:", round(p2,4)))
grid.arrange(g3m, g3f, nrow=2)
hist(dat$nctdel)
hist(dat$nctdel, breaks=30)
sort(dat$nctdel)
sort(dat$nctdel)[1:10]
sort(dat$nctdel)[1:20]
.05*60
.066666666*60
table(dat$all4)
table(dat$hisp)
c(T,F) | c(F,F)
c(T,F) || c(F,F)
c(T,F) ||| c(F,F)
c(T,F) || c(F,F)
